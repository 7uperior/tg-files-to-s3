version: '3.8' 

services:
  api:
    build: ./api
    command: uvicorn api.main:app --host=0.0.0.0 --port=8000 --reload --reload-include **
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      rabbitmq:
        condition: service_started
    env_file:
        - .env
    volumes:
      - ./api/:/src/api/
    networks:
      - my_network

  tg_bot:
    build: ./tg_bot
    ports:
      - "5000:5000" # for webhooks
    environment:
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    volumes:
      - ./tg_bot:/app
    networks:
      - my_network

  minio:
    image: minio/minio
    volumes:
      - minio_data:/mnt/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /mnt/data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - my_network

  postgres:
    image: postgres
    ports:
      - 5432:5432
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  rabbitmq:
    build: ./rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  my_network:
    driver: bridge

volumes:
  minio_data:
    driver: local